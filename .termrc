if [[ "$SHELL" == *"/zsh" ]]; then
    [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
    SH_CONFIG=~/.zshrc
elif [[ "$SHELL" == *"/bash" ]]; then
    [ -f ~/.fzf.bash ] && source ~/.fzf.bash

    if [[ "$JB_LOCATION" == "work" ]]; then
	SH_CONFIG=~/.bash_profile
    else
	SH_CONFIG=~/.bashrc
    fi
fi

export FZF_DEFAULT_COMMAND='ag --hidden --ignore .gt -g ""'
export FZF_CTRL_T_COMMAND='ag --hidden --ignore .gt -g ""'
export FZF_DEFAULT_OPTS='--exact'

alias q='exit'
alias gd='git diff'
alias gs='git status'
alias cl='rlwrap sbcl'

if [[ "$JB_LOCATION" == "work" ]]; then
    alias em='/usr/local/bin/emacsclient -n'
    alias ctags='/usr/local/bin/ctags'
    alias pm='cd ${PM_HOME}'
    alias nit='cd ${NIT}'
    alias nitro='cd ${NITRO_HOME}'
    alias uc='cd ${UCED_HOME}'
    alias ua='cd ${API_HOME}'
    alias disco='cd ${DISCOVERY_HOME}'
    alias ud='cd ${DISCOVERY_HOME}'
    alias con='cd ${CONNECTIONS_HOME}'
    alias pips='cd ${PIPS_HOME}'
    alias grep=ggrep
else
    if [[ -f '/snap/bin/emacsclient' ]]; then
        alias em='/snap/bin/emacsclient -n'
    else
        alias em='emacsclient -n'
    fi
fi

WORKROOT="/Users/byrnej85/work/"
WORKCONFIG="/Users/byrnej85/.curworkdir"

RETROROOT="$WORKROOT/retros"

function cdwk {
    cd "$WORKROOT/$(cat ~/.curworkdir)"
}

function mkwk() {
    TODAY=$(date +"%Y-%m-%d")
    mkdir "$WORKROOT/$TODAY"
    echo "#+TITLE:" > "$WORKROOT/$TODAY/notes.org"
    echo $TODAY > $WORKCONFIG
    cdwk
}

function retro() {
    WEEK_OF_YEAR=$(date +"%V")
    RETRO_NUM=$(expr $WEEK_OF_YEAR / 2)
    FILEN="$RETROROOT/retro-$RETRO_NUM"
    if [[ ! -e $RETROROOT/ ]]; then
        mkdir $RETROROOT
    fi
    if [[ ! -e $FILEN ]]; then
        touch $FILEN
    fi

    echo $@ >> $FILEN
}

function retrocat() {
    WEEK_OF_YEAR=$(date +"%V")
    RETRO_NUM=$(expr $WEEK_OF_YEAR / 2)
    FILEN="$RETROROOT/retro-$RETRO_NUM"
    cat $FILEN
}

function retroem() {
    WEEK_OF_YEAR=$(date +"%V")
    RETRO_NUM=$(expr $WEEK_OF_YEAR / 2)
    FILEN="$RETROROOT/retro-$RETRO_NUM"
    em $FILEN
}

function cd() {
  if [ "$#" = "0" ]
  then
  pushd ${HOME} > /dev/null
  elif [ -f "${1}" ]
  then
    ${EDITOR} ${1}
  else
  pushd "$1" > /dev/null
  fi
}

function bd() {
  if [ "$#" = "0" ]
  then
    popd > /dev/null
  else
    for i in $(seq ${1})
    do
      popd > /dev/null
    done
  fi
}

# List files with indexes to use in cf/lf
alias ll="ls -lhtr | gtac | cat -n | gtac | gsed -s 's/^\s*\([0-9]*\)\s*\(.*\)/[\1]  \2 [\1]/'g && pwd"

function lf() {
    if [ "x${1}" == "x" ]
    then
        n=1 
    else
        n="${1}"
    fi  
    ls -rt1 | tail -n ${n} | head -n 1
}

function cf() {
    cd $(lf ${1})
}

# fd - cd to selected directory
fd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

# https://github.com/junegunn/fzf/wiki/examples
# fh - repeat history
fh() {
  eval $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//')
}


export SED_EXE=sed
if [[ "$OSTYPE" == "darwin"* && $JB_LOCATION == "work" ]]; then
    unset $SED_EXE
    export SED_EXE=gsed
fi

# fhe - repeat history edit
writecmd (){ perl -e 'ioctl STDOUT, 0x5412, $_ for split //, do{ chomp($_ = <>); $_ }' ; }

fhe() {
  ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | $SED_EXE -re 's/^\s*[0-9]+\s*//' | writecmd
}

# fuzzy edit
fe() {
  local files
  IFS=$'\n' files=($(fzf-tmux --query="$1" --multi --select-1 --exit-0))
  [[ -n "$files" ]] && em "${files[@]}"
  # [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}


sb() {
  echo "Sourcing $SH_CONFIG"
  ([ -e $SH_CONFIG ] && source $SH_CONFIG && echo "Done") || echo "Error locating config"
}


# todo - alias fm to fuzzy search and open in emacsclient, and fmd the same but for a directory?
# f - fzf (return just displays selection)
# fd -fzf to a directory (return cd's to selection)
# fh fzf to history (return evals selection)
# use CTRL-o to 'open', CTRL-e to 'edit' in editor CTRL-? to edit on command line



